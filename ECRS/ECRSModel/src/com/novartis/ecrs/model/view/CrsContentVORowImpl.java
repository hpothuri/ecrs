package com.novartis.ecrs.model.view;


import com.novartis.ecrs.model.entity.CrsCompoundEOImpl;
import com.novartis.ecrs.model.entity.CrsContentEOImpl;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Apr 11 19:13:54 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CrsContentVORowImpl extends ViewRowImpl {


    public static final int ENTITY_CRSCONTENTEO = 0;
    public static final int ENTITY_CRSCOMPOUNDEO = 1;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CrsId {
            public Object get(CrsContentVORowImpl obj) {
                return obj.getCrsId();
            }

            public void put(CrsContentVORowImpl obj, Object value) {
                obj.setCrsId((Long)value);
            }
        }
        ,
        CrsName {
            public Object get(CrsContentVORowImpl obj) {
                return obj.getCrsName();
            }

            public void put(CrsContentVORowImpl obj, Object value) {
                obj.setCrsName((String)value);
            }
        }
        ,
        StateId {
            public Object get(CrsContentVORowImpl obj) {
                return obj.getStateId();
            }

            public void put(CrsContentVORowImpl obj, Object value) {
                obj.setStateId((Integer)value);
            }
        }
        ,
        CompoundId {
            public Object get(CrsContentVORowImpl obj) {
                return obj.getCompoundId();
            }

            public void put(CrsContentVORowImpl obj, Object value) {
                obj.setCompoundId((Integer)value);
            }
        }
        ,
        GenericName {
            public Object get(CrsContentVORowImpl obj) {
                return obj.getGenericName();
            }

            public void put(CrsContentVORowImpl obj, Object value) {
                obj.setGenericName((String)value);
            }
        }
        ,
        TradeName {
            public Object get(CrsContentVORowImpl obj) {
                return obj.getTradeName();
            }

            public void put(CrsContentVORowImpl obj, Object value) {
                obj.setTradeName((String)value);
            }
        }
        ,
        Indication {
            public Object get(CrsContentVORowImpl obj) {
                return obj.getIndication();
            }

            public void put(CrsContentVORowImpl obj, Object value) {
                obj.setIndication((String)value);
            }
        }
        ,
        IsMarketedFlag {
            public Object get(CrsContentVORowImpl obj) {
                return obj.getIsMarketedFlag();
            }

            public void put(CrsContentVORowImpl obj, Object value) {
                obj.setIsMarketedFlag((String)value);
            }
        }
        ,
        ReleaseStatusFlag {
            public Object get(CrsContentVORowImpl obj) {
                return obj.getReleaseStatusFlag();
            }

            public void put(CrsContentVORowImpl obj, Object value) {
                obj.setReleaseStatusFlag((String)value);
            }
        }
        ,
        BslName {
            public Object get(CrsContentVORowImpl obj) {
                return obj.getBslName();
            }

            public void put(CrsContentVORowImpl obj, Object value) {
                obj.setBslName((String)value);
            }
        }
        ,
        Designee {
            public Object get(CrsContentVORowImpl obj) {
                return obj.getDesignee();
            }

            public void put(CrsContentVORowImpl obj, Object value) {
                obj.setDesignee((String)value);
            }
        }
        ,
        MqmComment {
            public Object get(CrsContentVORowImpl obj) {
                return obj.getMqmComment();
            }

            public void put(CrsContentVORowImpl obj, Object value) {
                obj.setMqmComment((String)value);
            }
        }
        ,
        TaslName {
            public Object get(CrsContentVORowImpl obj) {
                return obj.getTaslName();
            }

            public void put(CrsContentVORowImpl obj, Object value) {
                obj.setTaslName((String)value);
            }
        }
        ,
        TaslRejectComment {
            public Object get(CrsContentVORowImpl obj) {
                return obj.getTaslRejectComment();
            }

            public void put(CrsContentVORowImpl obj, Object value) {
                obj.setTaslRejectComment((String)value);
            }
        }
        ,
        MedicalLeadName {
            public Object get(CrsContentVORowImpl obj) {
                return obj.getMedicalLeadName();
            }

            public void put(CrsContentVORowImpl obj, Object value) {
                obj.setMedicalLeadName((String)value);
            }
        }
        ,
        MedicalLeadRejectComment {
            public Object get(CrsContentVORowImpl obj) {
                return obj.getMedicalLeadRejectComment();
            }

            public void put(CrsContentVORowImpl obj, Object value) {
                obj.setMedicalLeadRejectComment((String)value);
            }
        }
        ,
        CrsEffectiveDt {
            public Object get(CrsContentVORowImpl obj) {
                return obj.getCrsEffectiveDt();
            }

            public void put(CrsContentVORowImpl obj, Object value) {
                obj.setCrsEffectiveDt((Timestamp)value);
            }
        }
        ,
        ReviewApproveRequiredFlag {
            public Object get(CrsContentVORowImpl obj) {
                return obj.getReviewApproveRequiredFlag();
            }

            public void put(CrsContentVORowImpl obj, Object value) {
                obj.setReviewApproveRequiredFlag((String)value);
            }
        }
        ,
        UiVersionNumber {
            public Object get(CrsContentVORowImpl obj) {
                return obj.getUiVersionNumber();
            }

            public void put(CrsContentVORowImpl obj, Object value) {
                obj.setUiVersionNumber((Integer)value);
            }
        }
        ,
        ReasonForChange {
            public Object get(CrsContentVORowImpl obj) {
                return obj.getReasonForChange();
            }

            public void put(CrsContentVORowImpl obj, Object value) {
                obj.setReasonForChange((String)value);
            }
        }
        ,
        CrsCompoundType {
            public Object get(CrsContentVORowImpl obj) {
                return obj.getCrsCompoundType();
            }

            public void put(CrsContentVORowImpl obj, Object value) {
                obj.setCrsCompoundType((String)value);
            }
        }
        ,
        CrsCompoundCode {
            public Object get(CrsContentVORowImpl obj) {
                return obj.getCrsCompoundCode();
            }

            public void put(CrsContentVORowImpl obj, Object value) {
                obj.setCrsCompoundCode((String)value);
            }
        }
        ,
        DesigneeName {
            public Object get(CrsContentVORowImpl obj) {
                return obj.getDesigneeName();
            }

            public void put(CrsContentVORowImpl obj, Object value) {
                obj.setDesigneeName((String)value);
            }
        }
        ,
        CreationTs {
            public Object get(CrsContentVORowImpl obj) {
                return obj.getCreationTs();
            }

            public void put(CrsContentVORowImpl obj, Object value) {
                obj.setCreationTs((Timestamp)value);
            }
        }
        ,
        ModificationTs {
            public Object get(CrsContentVORowImpl obj) {
                return obj.getModificationTs();
            }

            public void put(CrsContentVORowImpl obj, Object value) {
                obj.setModificationTs((Timestamp)value);
            }
        }
        ,
        CompoundType {
            public Object get(CrsContentVORowImpl obj) {
                return obj.getCompoundType();
            }

            public void put(CrsContentVORowImpl obj, Object value) {
                obj.setCompoundType((String)value);
            }
        }
        ,
        CompoundCode {
            public Object get(CrsContentVORowImpl obj) {
                return obj.getCompoundCode();
            }

            public void put(CrsContentVORowImpl obj, Object value) {
                obj.setCompoundCode((String)value);
            }
        }
        ,
        EntityState {
            public Object get(CrsContentVORowImpl obj) {
                return obj.getEntityState();
            }

            public void put(CrsContentVORowImpl obj, Object value) {
                obj.setEntityState((String)value);
            }
        }
        ,
        CrsCompoundVA {
            public Object get(CrsContentVORowImpl obj) {
                return obj.getCrsCompoundVA();
            }

            public void put(CrsContentVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CrsBSLUserVA {
            public Object get(CrsContentVORowImpl obj) {
                return obj.getCrsBSLUserVA();
            }

            public void put(CrsContentVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CrsTASLUserVA {
            public Object get(CrsContentVORowImpl obj) {
                return obj.getCrsTASLUserVA();
            }

            public void put(CrsContentVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CrsMLUserVA {
            public Object get(CrsContentVORowImpl obj) {
                return obj.getCrsMLUserVA();
            }

            public void put(CrsContentVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CrsUserVA {
            public Object get(CrsContentVORowImpl obj) {
                return obj.getCrsUserVA();
            }

            public void put(CrsContentVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CrsStateVA {
            public Object get(CrsContentVORowImpl obj) {
                return obj.getCrsStateVA();
            }

            public void put(CrsContentVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        BSLUserVA {
            public Object get(CrsContentVORowImpl obj) {
                return obj.getBSLUserVA();
            }

            public void put(CrsContentVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MLUserVA {
            public Object get(CrsContentVORowImpl obj) {
                return obj.getMLUserVA();
            }

            public void put(CrsContentVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TASLUserVA {
            public Object get(CrsContentVORowImpl obj) {
                return obj.getTASLUserVA();
            }

            public void put(CrsContentVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(CrsContentVORowImpl object);

        public abstract void put(CrsContentVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CRSID = AttributesEnum.CrsId.index();
    public static final int CRSNAME = AttributesEnum.CrsName.index();
    public static final int STATEID = AttributesEnum.StateId.index();
    public static final int COMPOUNDID = AttributesEnum.CompoundId.index();
    public static final int GENERICNAME = AttributesEnum.GenericName.index();
    public static final int TRADENAME = AttributesEnum.TradeName.index();
    public static final int INDICATION = AttributesEnum.Indication.index();
    public static final int ISMARKETEDFLAG = AttributesEnum.IsMarketedFlag.index();
    public static final int RELEASESTATUSFLAG = AttributesEnum.ReleaseStatusFlag.index();
    public static final int BSLNAME = AttributesEnum.BslName.index();
    public static final int DESIGNEE = AttributesEnum.Designee.index();
    public static final int MQMCOMMENT = AttributesEnum.MqmComment.index();
    public static final int TASLNAME = AttributesEnum.TaslName.index();
    public static final int TASLREJECTCOMMENT = AttributesEnum.TaslRejectComment.index();
    public static final int MEDICALLEADNAME = AttributesEnum.MedicalLeadName.index();
    public static final int MEDICALLEADREJECTCOMMENT = AttributesEnum.MedicalLeadRejectComment.index();
    public static final int CRSEFFECTIVEDT = AttributesEnum.CrsEffectiveDt.index();
    public static final int REVIEWAPPROVEREQUIREDFLAG = AttributesEnum.ReviewApproveRequiredFlag.index();
    public static final int UIVERSIONNUMBER = AttributesEnum.UiVersionNumber.index();
    public static final int REASONFORCHANGE = AttributesEnum.ReasonForChange.index();
    public static final int CRSCOMPOUNDTYPE = AttributesEnum.CrsCompoundType.index();
    public static final int CRSCOMPOUNDCODE = AttributesEnum.CrsCompoundCode.index();
    public static final int DESIGNEENAME = AttributesEnum.DesigneeName.index();
    public static final int CREATIONTS = AttributesEnum.CreationTs.index();
    public static final int MODIFICATIONTS = AttributesEnum.ModificationTs.index();
    public static final int COMPOUNDTYPE = AttributesEnum.CompoundType.index();
    public static final int COMPOUNDCODE = AttributesEnum.CompoundCode.index();
    public static final int ENTITYSTATE = AttributesEnum.EntityState.index();
    public static final int CRSCOMPOUNDVA = AttributesEnum.CrsCompoundVA.index();
    public static final int CRSBSLUSERVA = AttributesEnum.CrsBSLUserVA.index();
    public static final int CRSTASLUSERVA = AttributesEnum.CrsTASLUserVA.index();
    public static final int CRSMLUSERVA = AttributesEnum.CrsMLUserVA.index();
    public static final int CRSUSERVA = AttributesEnum.CrsUserVA.index();
    public static final int CRSSTATEVA = AttributesEnum.CrsStateVA.index();
    public static final int BSLUSERVA = AttributesEnum.BSLUserVA.index();
    public static final int MLUSERVA = AttributesEnum.MLUserVA.index();
    public static final int TASLUSERVA = AttributesEnum.TASLUserVA.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CrsContentVORowImpl() {
    }

    /**
     * Gets CrsContentEO entity object.
     * @return the CrsContentEO
     */
    public CrsContentEOImpl getCrsContentEO() {
        return (CrsContentEOImpl)getEntity(ENTITY_CRSCONTENTEO);
    }


    /**
     * Gets CrsCompoundEO entity object.
     * @return the CrsCompoundEO
     */
    public CrsCompoundEOImpl getCrsCompoundEO() {
        return (CrsCompoundEOImpl)getEntity(ENTITY_CRSCOMPOUNDEO);
    }

    /**
     * Gets the attribute value for CRS_ID using the alias name CrsId.
     * @return the CRS_ID
     */
    public Long getCrsId() {
        return (Long) getAttributeInternal(CRSID);
    }

    /**
     * Sets <code>value</code> as attribute value for CRS_ID using the alias name CrsId.
     * @param value value to set the CRS_ID
     */
    public void setCrsId(Long value) {
        setAttributeInternal(CRSID, value);
    }

    /**
     * Gets the attribute value for CRS_NAME using the alias name CrsName.
     * @return the CRS_NAME
     */
    public String getCrsName() {
        
        return (String)getAttributeInternal(CRSNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for CRS_NAME using the alias name CrsName.
     * @param value value to set the CRS_NAME
     */
    public void setCrsName(String value) {
        setAttributeInternal(CRSNAME, value);
    }

    /**
     * Gets the attribute value for STATE_ID using the alias name StateId.
     * @return the STATE_ID
     */
    public Integer getStateId() {
        return (Integer) getAttributeInternal(STATEID);
    }

    /**
     * Sets <code>value</code> as attribute value for STATE_ID using the alias name StateId.
     * @param value value to set the STATE_ID
     */
    public void setStateId(Integer value) {
        setAttributeInternal(STATEID, value);
    }

    /**
     * Gets the attribute value for COMPOUND_ID using the alias name CompoundId.
     * @return the COMPOUND_ID
     */
    public Integer getCompoundId() {
        return (Integer) getAttributeInternal(COMPOUNDID);
    }

    /**
     * Sets <code>value</code> as attribute value for COMPOUND_ID using the alias name CompoundId.
     * @param value value to set the COMPOUND_ID
     */
    public void setCompoundId(Integer value) {
        setAttributeInternal(COMPOUNDID, value);
    }

    /**
     * Gets the attribute value for GENERIC_NAME using the alias name GenericName.
     * @return the GENERIC_NAME
     */
    public String getGenericName() {
        return (String) getAttributeInternal(GENERICNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for GENERIC_NAME using the alias name GenericName.
     * @param value value to set the GENERIC_NAME
     */
    public void setGenericName(String value) {
        setAttributeInternal(GENERICNAME, value);
    }

    /**
     * Gets the attribute value for TRADE_NAME using the alias name TradeName.
     * @return the TRADE_NAME
     */
    public String getTradeName() {
        return (String) getAttributeInternal(TRADENAME);
    }

    /**
     * Sets <code>value</code> as attribute value for TRADE_NAME using the alias name TradeName.
     * @param value value to set the TRADE_NAME
     */
    public void setTradeName(String value) {
        setAttributeInternal(TRADENAME, value);
    }

    /**
     * Gets the attribute value for INDICATION using the alias name Indication.
     * @return the INDICATION
     */
    public String getIndication() {
        return (String) getAttributeInternal(INDICATION);
    }

    /**
     * Sets <code>value</code> as attribute value for INDICATION using the alias name Indication.
     * @param value value to set the INDICATION
     */
    public void setIndication(String value) {
        setAttributeInternal(INDICATION, value);
    }

    /**
     * Gets the attribute value for IS_MARKETED_FLAG using the alias name IsMarketedFlag.
     * @return the IS_MARKETED_FLAG
     */
    public String getIsMarketedFlag() {
        return (String) getAttributeInternal(ISMARKETEDFLAG);
    }

    /**
     * Sets <code>value</code> as attribute value for IS_MARKETED_FLAG using the alias name IsMarketedFlag.
     * @param value value to set the IS_MARKETED_FLAG
     */
    public void setIsMarketedFlag(String value) {
        setAttributeInternal(ISMARKETEDFLAG, value);
    }

    /**
     * Gets the attribute value for RELEASE_STATUS_FLAG using the alias name ReleaseStatusFlag.
     * @return the RELEASE_STATUS_FLAG
     */
    public String getReleaseStatusFlag() {
        return (String) getAttributeInternal(RELEASESTATUSFLAG);
    }

    /**
     * Sets <code>value</code> as attribute value for RELEASE_STATUS_FLAG using the alias name ReleaseStatusFlag.
     * @param value value to set the RELEASE_STATUS_FLAG
     */
    public void setReleaseStatusFlag(String value) {
        setAttributeInternal(RELEASESTATUSFLAG, value);
    }

    /**
     * Gets the attribute value for BSL_NAME using the alias name BslName.
     * @return the BSL_NAME
     */
    public String getBslName() {
        return (String) getAttributeInternal(BSLNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for BSL_NAME using the alias name BslName.
     * @param value value to set the BSL_NAME
     */
    public void setBslName(String value) {
        setAttributeInternal(BSLNAME, value);
    }

    /**
     * Gets the attribute value for DESIGNEE using the alias name Designee.
     * @return the DESIGNEE
     */
    public String getDesignee() {
        return (String) getAttributeInternal(DESIGNEE);
    }

    /**
     * Sets <code>value</code> as attribute value for DESIGNEE using the alias name Designee.
     * @param value value to set the DESIGNEE
     */
    public void setDesignee(String value) {
        setAttributeInternal(DESIGNEE, value);
    }

    /**
     * Gets the attribute value for MQM_COMMENT using the alias name MqmComment.
     * @return the MQM_COMMENT
     */
    public String getMqmComment() {
        return (String) getAttributeInternal(MQMCOMMENT);
    }

    /**
     * Sets <code>value</code> as attribute value for MQM_COMMENT using the alias name MqmComment.
     * @param value value to set the MQM_COMMENT
     */
    public void setMqmComment(String value) {
        setAttributeInternal(MQMCOMMENT, value);
    }

    /**
     * Gets the attribute value for TASL_NAME using the alias name TaslName.
     * @return the TASL_NAME
     */
    public String getTaslName() {
        return (String) getAttributeInternal(TASLNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for TASL_NAME using the alias name TaslName.
     * @param value value to set the TASL_NAME
     */
    public void setTaslName(String value) {
        setAttributeInternal(TASLNAME, value);
    }

    /**
     * Gets the attribute value for TASL_REJECT_COMMENT using the alias name TaslRejectComment.
     * @return the TASL_REJECT_COMMENT
     */
    public String getTaslRejectComment() {
        return (String) getAttributeInternal(TASLREJECTCOMMENT);
    }

    /**
     * Sets <code>value</code> as attribute value for TASL_REJECT_COMMENT using the alias name TaslRejectComment.
     * @param value value to set the TASL_REJECT_COMMENT
     */
    public void setTaslRejectComment(String value) {
        setAttributeInternal(TASLREJECTCOMMENT, value);
    }

    /**
     * Gets the attribute value for MEDICAL_LEAD_NAME using the alias name MedicalLeadName.
     * @return the MEDICAL_LEAD_NAME
     */
    public String getMedicalLeadName() {
        return (String) getAttributeInternal(MEDICALLEADNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for MEDICAL_LEAD_NAME using the alias name MedicalLeadName.
     * @param value value to set the MEDICAL_LEAD_NAME
     */
    public void setMedicalLeadName(String value) {
        setAttributeInternal(MEDICALLEADNAME, value);
    }

    /**
     * Gets the attribute value for MEDICAL_LEAD_REJECT_COMMENT using the alias name MedicalLeadRejectComment.
     * @return the MEDICAL_LEAD_REJECT_COMMENT
     */
    public String getMedicalLeadRejectComment() {
        return (String) getAttributeInternal(MEDICALLEADREJECTCOMMENT);
    }

    /**
     * Sets <code>value</code> as attribute value for MEDICAL_LEAD_REJECT_COMMENT using the alias name MedicalLeadRejectComment.
     * @param value value to set the MEDICAL_LEAD_REJECT_COMMENT
     */
    public void setMedicalLeadRejectComment(String value) {
        setAttributeInternal(MEDICALLEADREJECTCOMMENT, value);
    }

    /**
     * Gets the attribute value for CRS_EFFECTIVE_DT using the alias name CrsEffectiveDt.
     * @return the CRS_EFFECTIVE_DT
     */
    public Timestamp getCrsEffectiveDt() {
        return (Timestamp) getAttributeInternal(CRSEFFECTIVEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for CRS_EFFECTIVE_DT using the alias name CrsEffectiveDt.
     * @param value value to set the CRS_EFFECTIVE_DT
     */
    public void setCrsEffectiveDt(Timestamp value) {
        setAttributeInternal(CRSEFFECTIVEDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CrsCompoundType.
     * @return the CrsCompoundType
     */
    public String getCrsCompoundType() {
        return (String) getAttributeInternal(CRSCOMPOUNDTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CrsCompoundType.
     * @param value value to set the  CrsCompoundType
     */
    public void setCrsCompoundType(String value) {
        setAttributeInternal(CRSCOMPOUNDTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CrsCompoundCode.
     * @return the CrsCompoundCode
     */
    public String getCrsCompoundCode() {
        return (String) getAttributeInternal(CRSCOMPOUNDCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CrsCompoundCode.
     * @param value value to set the  CrsCompoundCode
     */
    public void setCrsCompoundCode(String value) {
        setAttributeInternal(CRSCOMPOUNDCODE, value);
    }


    /**
     * Gets the attribute value for the calculated attribute DesigneeName.
     * @return the DesigneeName
     */
    public String getDesigneeName() {
        return (String) getAttributeInternal(DESIGNEENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DesigneeName.
     * @param value value to set the  DesigneeName
     */
    public void setDesigneeName(String value) {
        setAttributeInternal(DESIGNEENAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CompoundType.
     * @return the CompoundType
     */
    public String getCompoundType() {
        return (String) getAttributeInternal(COMPOUNDTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CompoundType.
     * @param value value to set the  CompoundType
     */
    public void setCompoundType(String value) {
        setAttributeInternal(COMPOUNDTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CompoundCode.
     * @return the CompoundCode
     */
    public String getCompoundCode() {
        return (String) getAttributeInternal(COMPOUNDCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CompoundCode.
     * @param value value to set the  CompoundCode
     */
    public void setCompoundCode(String value) {
        setAttributeInternal(COMPOUNDCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EntityState.
     * @return the EntityState
     */
    public String getEntityState() {

        byte entityState = this.getEntity(0).getEntityState();
        if (entityState == EntityImpl.STATUS_NEW)
            return "NEW";
        else if (entityState == EntityImpl.STATUS_UNMODIFIED)
            return "UNMODIFIED";
        else if (entityState == EntityImpl.STATUS_MODIFIED)
            return "MODIFIED";
        else if (entityState == EntityImpl.STATUS_DELETED)
            return "DELETED";
        else if (entityState == EntityImpl.STATUS_DEAD)
            return "DEAD";  
        else return null;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EntityState.
     * @param value value to set the  EntityState
     */
    public void setEntityState(String value) {
        setAttributeInternal(ENTITYSTATE, value);
    }

    /**
     * Gets the attribute value for CREATION_TS using the alias name CreationTs.
     * @return the CREATION_TS
     */
    public Timestamp getCreationTs() {
        return (Timestamp) getAttributeInternal(CREATIONTS);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATION_TS using the alias name CreationTs.
     * @param value value to set the CREATION_TS
     */
    public void setCreationTs(Timestamp value) {
        setAttributeInternal(CREATIONTS, value);
    }

    /**
     * Gets the attribute value for MODIFICATION_TS using the alias name ModificationTs.
     * @return the MODIFICATION_TS
     */
    public Timestamp getModificationTs() {
        return (Timestamp) getAttributeInternal(MODIFICATIONTS);
    }

    /**
     * Sets <code>value</code> as attribute value for MODIFICATION_TS using the alias name ModificationTs.
     * @param value value to set the MODIFICATION_TS
     */
    public void setModificationTs(Timestamp value) {
        setAttributeInternal(MODIFICATIONTS, value);
    }

    /**
     * Gets the attribute value for REASON_FOR_CHANGE using the alias name ReasonForChange.
     * @return the REASON_FOR_CHANGE
     */
    public String getReasonForChange() {
        return (String) getAttributeInternal(REASONFORCHANGE);
    }

    /**
     * Sets <code>value</code> as attribute value for REASON_FOR_CHANGE using the alias name ReasonForChange.
     * @param value value to set the REASON_FOR_CHANGE
     */
    public void setReasonForChange(String value) {
        setAttributeInternal(REASONFORCHANGE, value);
    }

    /**
     * Gets the attribute value for UI_VERSION_NUMBER using the alias name UiVersionNumber.
     * @return the UI_VERSION_NUMBER
     */
    public Integer getUiVersionNumber() {
        return (Integer) getAttributeInternal(UIVERSIONNUMBER);
    }

    /**
     * Sets <code>value</code> as attribute value for UI_VERSION_NUMBER using the alias name UiVersionNumber.
     * @param value value to set the UI_VERSION_NUMBER
     */
    public void setUiVersionNumber(Integer value) {
        setAttributeInternal(UIVERSIONNUMBER, value);
    }

    /**
     * Gets the attribute value for REVIEW_APPROVE_REQUIRED_FLAG using the alias name ReviewApproveRequiredFlag.
     * @return the REVIEW_APPROVE_REQUIRED_FLAG
     */
    public String getReviewApproveRequiredFlag() {
        return (String) getAttributeInternal(REVIEWAPPROVEREQUIREDFLAG);
    }

    /**
     * Sets <code>value</code> as attribute value for REVIEW_APPROVE_REQUIRED_FLAG using the alias name ReviewApproveRequiredFlag.
     * @param value value to set the REVIEW_APPROVE_REQUIRED_FLAG
     */
    public void setReviewApproveRequiredFlag(String value) {
        setAttributeInternal(REVIEWAPPROVEREQUIREDFLAG, value);
    }


    /**
     * Gets the view accessor <code>RowSet</code> CrsCompoundVA.
     */
    public RowSet getCrsCompoundVA() {
        return (RowSet)getAttributeInternal(CRSCOMPOUNDVA);
    }


    /**
     * Gets the view accessor <code>RowSet</code> CrsBSLUserVA.
     */
    public RowSet getCrsBSLUserVA() {
        return (RowSet)getAttributeInternal(CRSBSLUSERVA);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CrsTASLUserVA.
     */
    public RowSet getCrsTASLUserVA() {
        return (RowSet)getAttributeInternal(CRSTASLUSERVA);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CrsMLUserVA.
     */
    public RowSet getCrsMLUserVA() {
        return (RowSet)getAttributeInternal(CRSMLUSERVA);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CrsUserVA.
     */
    public RowSet getCrsUserVA() {
        return (RowSet)getAttributeInternal(CRSUSERVA);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CrsStateVA.
     */
    public RowSet getCrsStateVA() {
        return (RowSet)getAttributeInternal(CRSSTATEVA);
    }

    /**
     * Gets the view accessor <code>RowSet</code> BSLUserVA.
     */
    public RowSet getBSLUserVA() {
        return (RowSet)getAttributeInternal(BSLUSERVA);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MLUserVA.
     */
    public RowSet getMLUserVA() {
        return (RowSet)getAttributeInternal(MLUSERVA);
    }

    /**
     * Gets the view accessor <code>RowSet</code> TASLUserVA.
     */
    public RowSet getTASLUserVA() {
        return (RowSet)getAttributeInternal(TASLUSERVA);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
